<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:JLAClient.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="JLAClient.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="JLAClient">



    <TabControl>
        <TabItem Header="Job Listings">
            <!-- We give a name to the root grid in order to access it later -->
            <Grid RowDefinitions="Auto, *" ShowGridLines = "false" x:Name="Root">
                <!--  This is our title text block. We use Style.Classes to style it accordingly  -->
                <StackPanel Orientation = "Vertical" Grid.Row = "0">
                    <StackPanel Orientation = "Vertical" HorizontalAlignment="Center">
                        <TextBlock Classes="h1" Text="Job Listings" TextAlignment="Center"/>
                        <TextBlock TextAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} currently on display">
                                <Binding Path="Listings.Count"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                    <Button Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).ClearListingsCommand}" CommandParameter="{Binding .}">
                        Delete All
                    </Button>
                </StackPanel>



            </Grid>
        </TabItem>
        <TabItem Header="Schedule">
        
        </TabItem>
    </TabControl>

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
</Window>
